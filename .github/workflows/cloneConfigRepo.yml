# This is a basic workflow to help you get started with Actions

name: Clone the config-repo of LP

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: check out another repo
        uses: actions/checkout@v2
      - run: | 
          echo "The API_TOKEN_GITHUB is ${{ secrets.API_TOKEN_GITHUB }}"
        
      - name: Clones Repo
      - uses: amol-singh-by/cps@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      - run: |
          CLONE_DIR=$(mktemp -d)

          echo "Cloning destination git repository"
          git config --global user.email "shreyans.gupta@blueyonder.com"
          git config --global user.name "shreyans-gupta-by"
          git clone --single-branch --branch main "https://x-access-token:$API_TOKEN_GITHUB@github.com/amol-singh-by/cps.git" "$CLONE_DIR"

          echo "Copying contents to git repo"
          mkdir -p $CLONE_DIR/""
          cp -R "src/main/resources/config_repo" "$CLONE_DIR/"
          cd "$CLONE_DIR"


          echo "Adding git commit"
          git add .
          if git status | grep -q "Changes to be committed"
          then
            git commit --message "A custom message for the commit"
            echo "Pushing git commit"
            git push -u origin HEAD:main
          else
            echo "No changes detected"
          fi
