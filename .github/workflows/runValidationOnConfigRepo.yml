# This is a basic workflow to help you get started with Actions


name: CI to validate config


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version}}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyaml
        pip install yaml
        pip install json
        pip install jsonschema
    #Running the sample python code to check the python installation
    - name: Run simple python code
      run: python -c 'import math; print(math.factorial(5))'
    
    - name: 'Verify Artifact File validationService.py to be present'
      run: |
        $file = "./validationService.py"
        if(!(Test-Path -path $file))
        {
            Write-Error "Expected file does not exist"
        }
      
    #Checking the relative path
    #- name: Get the relative path
    #  run: python -c 'import os; print('Inside script file')'
    
    - name: run Python code to truncate log file
      run: |
        python deleteLogs.py
          
    - name: run Python Validation
      run: |
        python validationService.py
    
    - name: Commit report log file
      id: commit
      run: |
        git config --local user.email "shreyans.gupta@blueyonder.com"
        git config --local user.name "shreyans-gupta-by"
        git add --all
        if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
        fi
      shell: bash
    - name: Push report log file changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         
